// <auto-generated />
using DDA.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDA.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230515101634_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DDA.Domain.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("DDA.Domain.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("DDA.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Category2"
                        });
                });

            modelBuilder.Entity("DDA.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test1",
                            Price = 100m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test2",
                            Price = 100m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test6",
                            Price = 500m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test5",
                            Price = 900m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test7",
                            Price = 900m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test3",
                            Price = 100m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Air Pods - in-ear wireless headphones",
                            Image = "/images/cat.jpg",
                            Name = "test4",
                            Price = 100m,
                            Quantity = 120
                        });
                });

            modelBuilder.Entity("DDA.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaltHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "string",
                            Name = "Dastan",
                            PasswordHash = "vtqMBmkyjYWTiUQgoQA/f1f4dKQ/tEOsfRYVp8bhXOI=",
                            SaltHash = "osWQVLjdW582FSVB6aMwDg=="
                        },
                        new
                        {
                            Id = 2,
                            Email = "string1",
                            Name = "Diana",
                            PasswordHash = "Iq+pXfcm8IoCLOFsDBW1NsTo63R86piURQ/yJrWPXzU=",
                            SaltHash = "/ZcP5+73VeaG0k1WH6eddw=="
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
