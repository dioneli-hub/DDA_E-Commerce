@using DDA.ApiModels;
@using DDA.BusinessLogic.Services.CartService;
@using DDA.BusinessLogic.Services.ItemService;
@using DDA.BusinessLogic.Services.UserService;
@page "/ItemDetails/{Id:int}"

@if (Item is null && ErrorMessage is null)
{
    <Loading></Loading>
}
else if (ErrorMessage is not null)
{
    <DisplayErrorMessage ErrorMessage="@ErrorMessage"></DisplayErrorMessage>
} 
else
{
    <h3 class=mb-5>Item Details</h3>
    <div class="row">
    <div class="col-md-6 mb-4">
        <img class="img-fluid" src="@Item.Image">
    </div>
    <div class="col-md-6">
        <h3>@Item.Name</h3>
        <p class="mb-4">@Item.Description</p>
        <p class="mb-4">
            <b>
                @Item.Price.ToString("C")&nbsp;(@Item.Quantity items in stock)
            </b>
        </p>
    <div>
        <button class="btn btn-success"
        @onclick = "() => (AddItemToCart_Click(new AddCartItemModel{
            CartId = CartService.GetUserCart(UserService.GetCurrentUserId()).Id, 
            ItemId = Item.Id,
            Quantity = 1
        }))"
        ><b>Add to Cart</b></button>
    </div>
    </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    public IItemService ItemService { get; set; }

    [Inject]
    public IUserService UserService { get; set; }

    [Inject]
    public ICartService CartService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    public ItemModel Item { get; set; }

    public string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Item = await ItemService.GetItem(Id);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
    }

    protected async Task AddItemToCart_Click(AddCartItemModel addCartItemModel)
    {
        try
        {
            var cartItemModel = await CartService.AddCartItem(addCartItemModel);
            NavigationManager.NavigateTo("/Cart");
        }
        catch (Exception)
        {
            //log later
        }
    }
}
