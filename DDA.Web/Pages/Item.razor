@page "/"
@using DDA.ApiModels;
@using DDA.BusinessLogic.Services.ItemService;

@if (Items == null)
{
    <h3>Loading products...</h3>
}
else
{
    <h3 class="mb-5">Products</h3>

    var itemCount = Items.Count();

    @if (itemCount > 0)
    {
        @*const int itemsPerRow = 4;
        var itemRowList = new List<ItemModel>();

        @for (int i = 0; i < itemCount; i++)
        {
            itemRowList = Items
            .Skip(i * itemsPerRow)
            .Take(itemsPerRow)
            .ToList();*@

        var itemsByCategory = from item in Items
                              group item by item.CategoryId into itemsByCatGroup
                              orderby itemsByCatGroup.Key
                              select itemsByCatGroup;

            
            @foreach(var itemGroup in itemsByCategory)
            {
                <h4>@itemGroup
                    .FirstOrDefault(g=>g.CategoryId == itemGroup.Key)
                    .CategoryName</h4>

                <div class="row mt-3">
                    <DisplayItems Items="@itemGroup"></DisplayItems>
                </div>
                <hr class="mb-3"/>
            }
            
            
        //}
    }
}

@code {
    [Inject]
    public IItemService ItemService { get; set; }
    public IEnumerable<ItemModel> Items { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Items = await ItemService.GetItems();
    }
}
