@using Blazored.LocalStorage
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<div class="dropdown">
    <button @onclick="ToggleAccountMenu" @onfocusout="HideAccountMenu" class="btn btn-dark dropdown-toggle account-button">
        <i class="oi oi-person"></i>
    </button>
    <div class="dropdown-menu dropdown-menu-right @AccountMenuCssClass">
        <AuthorizeView>
            <Authorized>
                    <a href="change-password" class="dropdown-item">Change Password</a>
                <button class="dropdown-item" @onclick="Logout">Logout</button>
            </Authorized>
            <NotAuthorized>
                <a href="register" class="dropdown-item">Create Account</a>
                <a href="login" class="dropdown-item">Login</a>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private bool showAccountMenu = false;

    private string AccountMenuCssClass => showAccountMenu ? "show-menu" : null;

    private void ToggleAccountMenu()
    {
        showAccountMenu = !showAccountMenu;
    }

    private async Task HideAccountMenu()
    {
        await Task.Delay(200);
        showAccountMenu = false;
    }

    private async Task Logout()
    {
        await LocalStorageService.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("login");
    }
}